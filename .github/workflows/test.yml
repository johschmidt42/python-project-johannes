---
name: Testing

on:
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry==1.3.1
      # set-up python with cache
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      # install requirements (including dev dependencies)
      - name: Install requirements
        run: poetry install --with test
      # run unit tests
      - name: Run unit-tests
        run: |
          set -o pipefail
          poetry run make unit-tests-cov-fail
      # add pytest coverage report to PR
      - name: Pytest coverage comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: Coverage Report
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest.xml
      # add content to GitHub summary
      - name: Pytest coverage GitHub summary
        if: ${{ success() && github.event_name == 'pull_request' }}
        run: |
          set -o pipefail
          echo '# Coverage report' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat pytest-coverage.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '\n\n\n'
          echo '${{ steps.coverageComment.outputs.coverageHtml }}' >> $GITHUB_STEP_SUMMARY
