{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>This site contains the project documentation for the <code>Python Project Johannes</code></p>"},{"location":"index.html#table-of-contents","title":"Table of Contents","text":"<p>The documentation follows the best practice for project documentation as described by Daniele Procida in the Di\u00e1taxis documentation framework and consists of four separate parts:</p> <ol> <li>Tutorials</li> <li>How-To Guides</li> <li>Reference</li> <li>Explanation</li> </ol>"},{"location":"api-documentation.html","title":"API Documentation","text":""},{"location":"explanation.html","title":"Explanation","text":"<p>This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented.</p> <p>Note: Consider the following points:</p> <ul> <li>Give context and background on your library</li> <li>Explain why you created it</li> <li>Provide multiple examples and approaches of how to work with it</li> <li>Help the reader make connections</li> <li>Avoid writing instructions or technical descriptions here</li> </ul>"},{"location":"how-to-guides.html","title":"How to guides","text":"<p>This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have, with the help of the code provided in this project.</p>"},{"location":"how-to-guides.html#how-to-find-information-about-your-favorite-pokemon","title":"How To Find Information About Your Favorite Pok\u00e9mon?","text":"<p>You have to call the endpoint!</p>"},{"location":"reference.html","title":"Reference","text":"<p>This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the project code.</p>"},{"location":"reference.html#example_app.app","title":"<code>example_app.app</code>","text":""},{"location":"reference.html#example_app.app.get_pokemon","title":"<code>get_pokemon(number=Path(title='The Pok\u00e9mon to get (based on number)', ge=1, le=151))</code>","text":"<p>Endpoint that returns information about Pok\u00e9mon.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>int</code> <p>The number of the Pok\u00e9mon to get</p> <code>Path(title='The Pok\u00e9mon to get (based on number)', ge=1, le=151)</code> <p>Returns:</p> Type Description <code>dict</code> <p>Awesome information about the Pok\u00e9mon!</p> Source code in <code>example_app/app.py</code> <pre><code>@app.get(path=\"/{number}\", status_code=status.HTTP_200_OK)\ndef get_pokemon(\n    number: int = Path(title=\"The Pok\u00e9mon to get (based on number)\", ge=1, le=151)\n) -&gt; dict:\n\"\"\"\n    Endpoint that returns information about Pok\u00e9mon.\n    Args:\n        number: The number of the Pok\u00e9mon to get\n    Returns:\n        Awesome information about the Pok\u00e9mon!\n    \"\"\"\n    pokemon_url: str = f\"https://pokeapi.co/api/v2/pokemon/{number}\"\n\n    try:\n        response: Response = httpx.get(url=pokemon_url)\n    except Exception:\n        raise HTTPException(\n            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,\n            detail=f\"Could not send a request to {pokemon_url}\",\n        )\n\n    if response.status_code == status.HTTP_200_OK:\n        return response.json()\n    else:\n        raise HTTPException(status_code=response.status_code, detail=response.text)\n</code></pre>"},{"location":"reference.html#example_app.service","title":"<code>example_app.service</code>","text":"<p>Provides several sample functions.</p> <p>The module contains the following functions:</p> <ul> <li><code>foo(a, b)</code> - Returns the sum of two numbers (int).</li> <li>`bar(a)' - Returns a hello message with the input string.</li> </ul>"},{"location":"reference.html#example_app.service.bar","title":"<code>bar(name='Frank Herbert')</code>","text":"<p>Says 'Hello' with input.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>input string</p> <code>'Frank Herbert'</code> <p>Returns:</p> Type Description <code>str</code> <p>A 'Hello' message.</p> Source code in <code>example_app/service.py</code> <pre><code>def bar(name: str = \"Frank Herbert\") -&gt; str:\n\"\"\"\n    Says 'Hello' with input.\n\n    Args:\n        name: input string\n\n    Returns:\n        A 'Hello' message.\n    \"\"\"\n    return f\"Hello, {name}!\"\n</code></pre>"},{"location":"reference.html#example_app.service.foo","title":"<code>foo(a, b)</code>","text":"<p>This is a description what the function does.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; foo(a=1, b=2)\n3\n&gt;&gt;&gt; foo(a=4, b=15)\n19\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>int</code> <p>This is the first summand</p> required <code>b</code> <code>int</code> <p>This is the second summand</p> required <p>Returns:</p> Type Description <code>int</code> <p>The summation of a and b.</p> Source code in <code>example_app/service.py</code> <pre><code>def foo(a: int, b: int) -&gt; int:\n\"\"\"\n    This is a description what the function does.\n\n    Examples:\n        &gt;&gt;&gt; foo(a=1, b=2)\n        3\n        &gt;&gt;&gt; foo(a=4, b=15)\n        19\n\n    Args:\n        a: This is the first summand\n        b: This is the second summand\n\n    Returns:\n        The summation of a and b.\n    \"\"\"\n    return a + b\n</code></pre>"},{"location":"tutorials.html","title":"Tutorials","text":"<p>This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project.</p> <p>Note: Consider the following points:</p> <ul> <li>Help newcomers with getting started</li> <li>Teach readers about your library by making them write code</li> <li>Inspire confidence through examples that work for everyone, repeatably</li> <li>Give readers an immediate sense of achievement</li> <li>Show concrete examples, no abstractions</li> <li>Provide the minimum necessary explanation</li> <li>Avoid any distractions</li> </ul>"}]}